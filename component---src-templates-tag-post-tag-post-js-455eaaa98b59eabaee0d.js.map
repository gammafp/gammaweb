{"version":3,"sources":["webpack:///./src/components/BlogList/BlogList.jsx","webpack:///./src/templates/tag-post/tag-post.js"],"names":["BlogList","posts","postsInIndexPage","i18n","useTranslation","posts_lang","filter","edge","i","node","fields","slug","startsWith","language","useEffect","Observer","emit","GLOBAL_EVENT","INDEX_POSTS_LOADED","className","map","post","excerpt","frontmatter","description","tags","tag","key","title","cover","publicURL","BlogPostTemplate","pageContext","data","location","siteTitle","edges","allMarkdownRemark","pageQuery"],"mappings":"4KA0CeA,IAlCE,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,iBACjBC,EAASC,cAATD,KACFE,EAAaJ,EAAMK,QAAO,SAACC,EAAMC,GACrC,OAAQD,EAAKE,KAAKC,OAAOC,KAAKC,WAAtB,IAAqCT,EAAKU,SAA1C,QAOV,OAJAC,qBAAU,WACRC,IAASC,KAAKC,IAAaC,uBAI3B,yBAAKC,UAAU,uCAEXd,EAAWe,KAAI,SAACC,EAAMb,GACpB,IAAMC,EAAOY,EAAKZ,KACZa,EAA4C,OAAjCb,EAAKc,YAAYC,YAAwBf,EAAKc,YAAYC,YAAcf,EAAKa,QAC9F,GAA8B,OAA1Bb,EAAKc,YAAYE,MAAiBjB,EAAIN,EAAkB,CAC1D,IAAMwB,EAAMjB,EAAKc,YAAYE,KAAK,GAClC,OAAO,kBAAC,IAAD,CAAMN,UAAU,4BAA4BQ,IAAKnB,EACpDG,KAAMF,EAAKC,OAAOC,KAClBiB,MAAOnB,EAAKc,YAAYK,MACxBN,QAASA,EACTI,IAAKA,EACLG,MAAOpB,EAAKc,YAAYM,OAASpB,EAAKc,YAAYM,MAAMC,YAG5D,OAAO,W,kCClCnB,0HAsBeC,UAfU,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,YAAaC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,UAC/CT,EAAQM,EAARN,IACAU,EAAUH,EAAKI,kBAAfD,MAER,OACE,kBAAC,IAAD,CAAQF,SAAUA,EAAUN,MAAOO,GACjC,kBAAC,IAAD,CAAKP,MAAM,QACX,kBAAC,IAAD,MACA,yBAAKT,UAAU,oBACb,wBAAIA,UAAU,sBAAd,QAAyCO,IAE3C,kBAAC,IAAD,CAAUzB,MAAOmC,EAAOlC,iBAAkB,QAKzC,IAAMoC,EAAS","file":"component---src-templates-tag-post-tag-post-js-455eaaa98b59eabaee0d.js","sourcesContent":["// Componente para mostrar un nÃºmero de posts determinado\r\nimport React, { useEffect } from 'react';\r\nimport Card from '../Card/Card';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { Observer, GLOBAL_EVENT } from '../../Observer';\r\n\r\nimport './BlogList.scss';\r\n\r\nconst BlogList = ({ posts, postsInIndexPage }) => {\r\n  const { i18n } = useTranslation();\r\n  const posts_lang = posts.filter((edge, i) => {\r\n    return (edge.node.fields.slug.startsWith(`/${i18n.language}/`));\r\n  });\r\n\r\n  useEffect(() => {\r\n    Observer.emit(GLOBAL_EVENT.INDEX_POSTS_LOADED);\r\n  })\r\n\r\n  return (\r\n    <div className=\"text-center mt-3 blogList container\">\r\n      {\r\n        posts_lang.map((post, i) => {\r\n          const node = post.node;\r\n          const excerpt = (node.frontmatter.description !== null) ? node.frontmatter.description : node.excerpt;\r\n          if (node.frontmatter.tags !== null && i < postsInIndexPage) {\r\n            const tag = node.frontmatter.tags[0];\r\n            return <Card className=\"mx-0 mx-sm-2 my-1 my-sm-3\" key={i}\r\n                slug={node.fields.slug}\r\n                title={node.frontmatter.title}\r\n                excerpt={excerpt}\r\n                tag={tag}\r\n                cover={node.frontmatter.cover && node.frontmatter.cover.publicURL}\r\n              />;\r\n          } else {\r\n            return null;\r\n          }\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BlogList;\r\n","import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport Layout from '../../components/layout';\r\nimport SEO from '../../components/seo';\r\nimport { Header } from '../../components/Header/Header';\r\nimport BlogList from '../../components/BlogList/BlogList';\r\n\r\nconst BlogPostTemplate = ({ pageContext, data, location, siteTitle }) => {\r\n  const { tag } = pageContext\r\n  const { edges } = data.allMarkdownRemark;\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO title=\"Tag\" />\r\n      <Header />\r\n      <div className=\"text-center mt-3\">\r\n        <h3 className=\"text-primary-color\">Tag: {tag}</h3>\r\n      </div>\r\n      <BlogList posts={edges} postsInIndexPage={1000} />\r\n    </Layout>\r\n  )\r\n}\r\nexport default BlogPostTemplate;\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        postsInIndexPage\r\n      }\r\n    }\r\n    allMarkdownRemark(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: { frontmatter: { tags: { in: [$tag] } } }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n            tags\r\n            cover {\r\n              publicURL\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;"],"sourceRoot":""}